<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ImmutableState on Rishab Dhar</title>
    <link>http://localhost:1313/tags/immutablestate/</link>
    <description>Recent content in ImmutableState on Rishab Dhar</description>
    <image>
      <url>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>http://localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 07 Aug 2024 23:15:00 +0700</lastBuildDate><atom:link href="http://localhost:1313/tags/immutablestate/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Functional Programming in Flutter using fpdart</title>
      <link>http://localhost:1313/tech-write-up/fpdart-flutter/</link>
      <pubDate>Wed, 07 Aug 2024 23:15:00 +0700</pubDate>
      
      <guid>http://localhost:1313/tech-write-up/fpdart-flutter/</guid>
      <description>As I build my budgeting app, functional programming has become a key part of my development. The fpdart package has really helped me manage errors and state in a more organized way. Let me show you how itâ€™s made a difference with some practical examples.
Why Functional Programming? Functional programming makes code easier to manage and test by focusing on pure functions and immutability (not changing data).
How Fpdart Helps Fpdart offers tools like Either and Option that simplify error handling and dealing with nullable values.</description>
    </item>
    
  </channel>
</rss>
